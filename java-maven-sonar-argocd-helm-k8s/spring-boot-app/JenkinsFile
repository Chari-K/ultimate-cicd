pipeline {
  agent {
    docker {
      image 'charidhub/jenkins-agent:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Chari-K/ultimate-cicd.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.109.62.123:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
  environment {
    DOCKER_IMAGE = "charidhub/jenkins-agent:${BUILD_NUMBER}"
  }
  steps {
    withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
      sh '''
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        docker build -t ${DOCKER_IMAGE} .
        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
        docker push ${DOCKER_IMAGE}
      '''
    }
  }
}
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "ultimate-cicd"
        GIT_USER_NAME = "chari-k"
      }
      steps {
        withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global --add safe.directory '*'
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests
            git config --global user.email "shankarachari07@gmail.com"
            git config --global user.name "chari-k"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
            cd ../..
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
